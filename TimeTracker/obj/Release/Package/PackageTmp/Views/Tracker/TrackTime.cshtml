@model TimeTracker.Models.Tracker
@{
    ViewBag.Title = "TrackTime";
    Layout = null;
    var count = 0;
    List<string> allstyle = new List<string>();
    allstyle.Add("btn btn-info");
    allstyle.Add("btn btn-success");
    allstyle.Add("btn btn-warning");
    allstyle.Add("btn btn-danger");
}


<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script>
    $(function () {
        $("#PatientID").attr("value", "");
        $("#createlink").click(function () {

            bValid = $("#updateCForm").valid();
            if (bValid) {
                $(this).attr("disabled", "disabled");
                $("#updateCForm").submit();
            }
        });
        $("button").attr("class", "btn btn-primary")
        //$("#TrakingDateTime").datetimepicker({
        //    ampm: true
        //});
        $('#TrakingDateTime').datetimepicker({
            minDate: 0,
            ampm: true,
            changeMonth: true,
            changeYear: true
        });
        $('.ui-datepicker-close').live('click', function () {
            var tdate = $('#TrakingDateTime').datetimepicker("option", "dateFormat", "DD, d MM, yy");
            $("#alt-datepicker").html(tdate.val().toString());
            var tdate = $('#TrakingDateTime').datetimepicker("option", "dateFormat", "mm / dd / yy");
        });
        $(".btn-group li").click(function () {
            var selectedId = $(this).attr("Id");

            //$("#status").html($(this).html());
            $("#status").attr("class", $(this).attr("class"));
            $("#StatusId").attr("value", selectedId);
        });


        $("#PatientID").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Tracker/AllPatients/?pname=' + $("#PatientID").val(),
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Text, value: item.Value };
                        }))
                    }
                })
            },
            select: function (event, ui) {
                $("#pname").html(ui.item.label);
                $.get("/Tracker/GetPatientType", { pid: ui.item.value }, function (data) {
                    alert(data);
                    $("#ptype").html(data);
                });
            },
            minLength: 1, // require at least one character from the user
        });
    });

</script>
<style>
    #status {
        padding: 4px;
        border-radius: 10px;
        margin: 0px;
        height: 2px;
        width: 5px;
        margin-left: 2px;
    }
</style>


<div class="label label-inverse row" style="margin: 0 auto;">
    <a class="close" data-dismiss="alert" href="#">x</a>
    <div class="span5">
        <a href="#" id="createlink" style="margin: 20px 40px 0px 0px;" class="btn btn-orange btn-large pull-right">
            <img src="@Url.Content("~/Content/images/arrow-20-xxl.png")" width="40px" alt="Enter" /></a>
        <h3><span id="pname">Enter a person</span></h3>
        <p style="font-weight: normal;"><span id="ptype">Patient</span> | Cleaning and Implant |<small id="status">&nbsp; </small></p>
        <h3 id="alt-datepicker">@DateTime.Now.ToString("D") @DateTime.Now.ToShortTimeString() </h3>

    </div>



</div>
<div id="result"></div>
@using (Ajax.BeginForm("TrackTime", "Tracker", null,
        new AjaxOptions
        {
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "POST",
            OnSuccess = "updateCSuccess"
        }, new { @id = "updateCForm" }))
{
    <div id="update-message"></div>
    @Html.ValidationSummary(true)
   
     
    <div class="editor-label">
        @Html.LabelFor(model => model.PatientID)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.PatientID, new { placeholder = "Enter a person" })
        @Html.ValidationMessageFor(model => model.PatientID)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.TrakingDateTime)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.TrakingDateTime)
        @Html.ValidationMessageFor(model => model.TrakingDateTime)
    </div>

    <div class="editor-label">
        @Html.HiddenFor(model => model.StatusId)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.StatusId, "Status")
    </div>
   
    <ul class="btn-group">
        @foreach (var item in (SelectList)ViewBag.StatusId)
        {
                
            <li class="@allstyle[count]" style="margin:2px"  id="@item.Value">@item.Text</li>  
                        
            count = count + 1;
        }
    </ul>



}


